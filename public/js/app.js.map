{"version":3,"file":"app.js","sources":["node_modules/jquery/dist/jquery.js","node_modules/dropzone/dist/dropzone.js","node_modules/datatables.net/js/jquery.dataTables.js","resources/assets/js/bootstrap.js","resources/assets/js/app.js"],"sourcesContent":["/*!\n * jQuery JavaScript Library v3.1.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2016-09-22T22:30Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\n\n\n\tfunction DOMEval( code, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar script = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.1.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// As of jQuery 3.0, isNumeric is limited to\n\t\t// strings and numbers (primitives or objects)\n\t\t// that can be coerced to finite numbers (gh-2662)\n\t\tvar type = jQuery.type( obj );\n\t\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t\t// subtraction forces infinities to NaN\n\t\t\t!isNaN( obj - parseFloat( obj ) );\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android <=2.3 only (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE <=9 - 11, Edge 12 - 13\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Simple selector that can be filtered directly, removing non-Elements\n\tif ( risSimple.test( qualifier ) ) {\n\t\treturn jQuery.filter( qualifier, elements, not );\n\t}\n\n\t// Complex selector, compare the two sets, removing non-Elements\n\tqualifier = jQuery.filter( qualifier, elements );\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && jQuery.isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Support: Android 4.0 only\n\t\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\t\tresolve.call( undefined, value );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.call( undefined, value );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( jQuery.isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tjQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ jQuery.camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ jQuery.camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( jQuery.camelCase );\n\t\t\t} else {\n\t\t\t\tkey = jQuery.camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && jQuery.nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: jQuery.isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\nfunction manipulationTarget( elem, content ) {\n\tif ( jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn elem.getElementsByTagName( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdiv.style.cssText =\n\t\t\t\"box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE <=9 only\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i,\n\t\tval = 0;\n\n\t// If we already have the right measurement, avoid augmentation\n\tif ( extra === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\ti = 4;\n\n\t// Otherwise initialize for horizontal or vertical properties\n\t} else {\n\t\ti = name === \"width\" ? 1 : 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar val,\n\t\tvalueIsBorderBox = true,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Support: IE <=11 only\n\t// Running getBoundingClientRect on a disconnected node\n\t// in IE throws an error.\n\tif ( elem.getClientRects().length ) {\n\t\tval = elem.getBoundingClientRect()[ name ];\n\t}\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction raf() {\n\tif ( timerId ) {\n\t\twindow.requestAnimationFrame( raf );\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 13\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off or if document is hidden\n\tif ( jQuery.fx.off || document.hidden ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.requestAnimationFrame ?\n\t\t\twindow.requestAnimationFrame( raf ) :\n\t\t\twindow.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tif ( window.cancelAnimationFrame ) {\n\t\twindow.cancelAnimationFrame( timerId );\n\t} else {\n\t\twindow.clearInterval( timerId );\n\t}\n\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnothtmlwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnothtmlwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnothtmlwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = jQuery.isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( jQuery.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 13\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win, rect, doc,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\trect = elem.getBoundingClientRect();\n\n\t\t// Make sure element is not hidden (display: none)\n\t\tif ( rect.width || rect.height ) {\n\t\t\tdoc = elem.ownerDocument;\n\t\t\twin = getWindow( doc );\n\t\t\tdocElem = doc.documentElement;\n\n\t\t\treturn {\n\t\t\t\ttop: rect.top + win.pageYOffset - docElem.clientTop,\n\t\t\t\tleft: rect.left + win.pageXOffset - docElem.clientLeft\n\t\t\t};\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden elements (gh-2310)\n\t\treturn rect;\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset = {\n\t\t\t\ttop: parentOffset.top + jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true ),\n\t\t\t\tleft: parentOffset.left + jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true )\n\t\t\t};\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\njQuery.parseJSON = JSON.parse;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\n\nreturn jQuery;\n} );\n","\n/*\n *\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n *\n * Copyright (c) 2012, Matias Meno\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n(function() {\n  var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\n    __slice = [].slice,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  noop = function() {};\n\n  Emitter = (function() {\n    function Emitter() {}\n\n    Emitter.prototype.addEventListener = Emitter.prototype.on;\n\n    Emitter.prototype.on = function(event, fn) {\n      this._callbacks = this._callbacks || {};\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(fn);\n      return this;\n    };\n\n    Emitter.prototype.emit = function() {\n      var args, callback, callbacks, event, _i, _len;\n      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      this._callbacks = this._callbacks || {};\n      callbacks = this._callbacks[event];\n      if (callbacks) {\n        for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n          callback = callbacks[_i];\n          callback.apply(this, args);\n        }\n      }\n      return this;\n    };\n\n    Emitter.prototype.removeListener = Emitter.prototype.off;\n\n    Emitter.prototype.removeAllListeners = Emitter.prototype.off;\n\n    Emitter.prototype.removeEventListener = Emitter.prototype.off;\n\n    Emitter.prototype.off = function(event, fn) {\n      var callback, callbacks, i, _i, _len;\n      if (!this._callbacks || arguments.length === 0) {\n        this._callbacks = {};\n        return this;\n      }\n      callbacks = this._callbacks[event];\n      if (!callbacks) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        delete this._callbacks[event];\n        return this;\n      }\n      for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {\n        callback = callbacks[i];\n        if (callback === fn) {\n          callbacks.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    return Emitter;\n\n  })();\n\n  Dropzone = (function(_super) {\n    var extend, resolveOption;\n\n    __extends(Dropzone, _super);\n\n    Dropzone.prototype.Emitter = Emitter;\n\n\n    /*\n    This is a list of all available events you can register on a dropzone object.\n    \n    You can register an event handler like this:\n    \n        dropzone.on(\"dragEnter\", function() { });\n     */\n\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n\n    Dropzone.prototype.defaultOptions = {\n      url: null,\n      method: \"post\",\n      withCredentials: false,\n      parallelUploads: 2,\n      uploadMultiple: false,\n      maxFilesize: 256,\n      paramName: \"file\",\n      createImageThumbnails: true,\n      maxThumbnailFilesize: 10,\n      thumbnailWidth: 120,\n      thumbnailHeight: 120,\n      filesizeBase: 1000,\n      maxFiles: null,\n      params: {},\n      clickable: true,\n      ignoreHiddenFiles: true,\n      acceptedFiles: null,\n      acceptedMimeTypes: null,\n      autoProcessQueue: true,\n      autoQueue: true,\n      addRemoveLinks: false,\n      previewsContainer: null,\n      hiddenInputContainer: \"body\",\n      capture: null,\n      renameFilename: null,\n      dictDefaultMessage: \"Drop files here to upload\",\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      dictInvalidFileType: \"You can't upload files of this type.\",\n      dictResponseError: \"Server responded with {{statusCode}} code.\",\n      dictCancelUpload: \"Cancel upload\",\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      dictRemoveFile: \"Remove file\",\n      dictRemoveFileConfirmation: null,\n      dictMaxFilesExceeded: \"You can not upload any more files.\",\n      accept: function(file, done) {\n        return done();\n      },\n      init: function() {\n        return noop;\n      },\n      forceFallback: false,\n      fallback: function() {\n        var child, messageElement, span, _i, _len, _ref;\n        this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";\n        _ref = this.element.getElementsByTagName(\"div\");\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\";\n            continue;\n          }\n        }\n        if (!messageElement) {\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n          this.element.appendChild(messageElement);\n        }\n        span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n          if (span.textContent != null) {\n            span.textContent = this.options.dictFallbackMessage;\n          } else if (span.innerText != null) {\n            span.innerText = this.options.dictFallbackMessage;\n          }\n        }\n        return this.element.appendChild(this.getFallbackForm());\n      },\n      resize: function(file) {\n        var info, srcRatio, trgRatio;\n        info = {\n          srcX: 0,\n          srcY: 0,\n          srcWidth: file.width,\n          srcHeight: file.height\n        };\n        srcRatio = file.width / file.height;\n        info.optWidth = this.options.thumbnailWidth;\n        info.optHeight = this.options.thumbnailHeight;\n        if ((info.optWidth == null) && (info.optHeight == null)) {\n          info.optWidth = info.srcWidth;\n          info.optHeight = info.srcHeight;\n        } else if (info.optWidth == null) {\n          info.optWidth = srcRatio * info.optHeight;\n        } else if (info.optHeight == null) {\n          info.optHeight = (1 / srcRatio) * info.optWidth;\n        }\n        trgRatio = info.optWidth / info.optHeight;\n        if (file.height < info.optHeight || file.width < info.optWidth) {\n          info.trgHeight = info.srcHeight;\n          info.trgWidth = info.srcWidth;\n        } else {\n          if (srcRatio > trgRatio) {\n            info.srcHeight = file.height;\n            info.srcWidth = info.srcHeight * trgRatio;\n          } else {\n            info.srcWidth = file.width;\n            info.srcHeight = info.srcWidth / trgRatio;\n          }\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        return info;\n      },\n\n      /*\n      Those functions register themselves to the events on init and handle all\n      the user interface specific stuff. Overwriting them won't break the upload\n      but can break the way it's displayed.\n      You can overwrite them if you don't like the default behavior. If you just\n      want to add an additional event handler, register it on the dropzone object\n      and don't overwrite those options.\n       */\n      drop: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart: noop,\n      dragend: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste: noop,\n      reset: function() {\n        return this.element.classList.remove(\"dz-started\");\n      },\n      addedfile: function(file) {\n        var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n        if (this.element === this.previewsContainer) {\n          this.element.classList.add(\"dz-started\");\n        }\n        if (this.previewsContainer) {\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n          file.previewTemplate = file.previewElement;\n          this.previewsContainer.appendChild(file.previewElement);\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            node.textContent = this._renameFilename(file.name);\n          }\n          _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            node = _ref1[_j];\n            node.innerHTML = this.filesize(file.size);\n          }\n          if (this.options.addRemoveLinks) {\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);\n          }\n          removeFileEvent = (function(_this) {\n            return function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              if (file.status === Dropzone.UPLOADING) {\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {\n                  return _this.removeFile(file);\n                });\n              } else {\n                if (_this.options.dictRemoveFileConfirmation) {\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {\n                    return _this.removeFile(file);\n                  });\n                } else {\n                  return _this.removeFile(file);\n                }\n              }\n            };\n          })(this);\n          _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\n          _results = [];\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n            removeLink = _ref2[_k];\n            _results.push(removeLink.addEventListener(\"click\", removeFileEvent));\n          }\n          return _results;\n        }\n      },\n      removedfile: function(file) {\n        var _ref;\n        if (file.previewElement) {\n          if ((_ref = file.previewElement) != null) {\n            _ref.parentNode.removeChild(file.previewElement);\n          }\n        }\n        return this._updateMaxFilesReachedClass();\n      },\n      thumbnail: function(file, dataUrl) {\n        var thumbnailElement, _i, _len, _ref;\n        if (file.previewElement) {\n          file.previewElement.classList.remove(\"dz-file-preview\");\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            thumbnailElement = _ref[_i];\n            thumbnailElement.alt = file.name;\n            thumbnailElement.src = dataUrl;\n          }\n          return setTimeout(((function(_this) {\n            return function() {\n              return file.previewElement.classList.add(\"dz-image-preview\");\n            };\n          })(this)), 1);\n        }\n      },\n      error: function(file, message) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-error\");\n          if (typeof message !== \"String\" && message.error) {\n            message = message.error;\n          }\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            _results.push(node.textContent = message);\n          }\n          return _results;\n        }\n      },\n      errormultiple: noop,\n      processing: function(file) {\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-processing\");\n          if (file._removeLink) {\n            return file._removeLink.textContent = this.options.dictCancelUpload;\n          }\n        }\n      },\n      processingmultiple: noop,\n      uploadprogress: function(file, progress, bytesSent) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            if (node.nodeName === 'PROGRESS') {\n              _results.push(node.value = progress);\n            } else {\n              _results.push(node.style.width = \"\" + progress + \"%\");\n            }\n          }\n          return _results;\n        }\n      },\n      totaluploadprogress: noop,\n      sending: noop,\n      sendingmultiple: noop,\n      success: function(file) {\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-success\");\n        }\n      },\n      successmultiple: noop,\n      canceled: function(file) {\n        return this.emit(\"error\", file, \"Upload canceled.\");\n      },\n      canceledmultiple: noop,\n      complete: function(file) {\n        if (file._removeLink) {\n          file._removeLink.textContent = this.options.dictRemoveFile;\n        }\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-complete\");\n        }\n      },\n      completemultiple: noop,\n      maxfilesexceeded: noop,\n      maxfilesreached: noop,\n      queuecomplete: noop,\n      addedfiles: noop,\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\"\n    };\n\n    extend = function() {\n      var key, object, objects, target, val, _i, _len;\n      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = objects.length; _i < _len; _i++) {\n        object = objects[_i];\n        for (key in object) {\n          val = object[key];\n          target[key] = val;\n        }\n      }\n      return target;\n    };\n\n    function Dropzone(element, options) {\n      var elementOptions, fallback, _ref;\n      this.element = element;\n      this.version = Dropzone.version;\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n      this.clickableElements = [];\n      this.listeners = [];\n      this.files = [];\n      if (typeof this.element === \"string\") {\n        this.element = document.querySelector(this.element);\n      }\n      if (!(this.element && (this.element.nodeType != null))) {\n        throw new Error(\"Invalid dropzone element.\");\n      }\n      if (this.element.dropzone) {\n        throw new Error(\"Dropzone already attached.\");\n      }\n      Dropzone.instances.push(this);\n      this.element.dropzone = this;\n      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n        return this.options.fallback.call(this);\n      }\n      if (this.options.url == null) {\n        this.options.url = this.element.getAttribute(\"action\");\n      }\n      if (!this.options.url) {\n        throw new Error(\"No URL provided.\");\n      }\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }\n      if (this.options.acceptedMimeTypes) {\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;\n        delete this.options.acceptedMimeTypes;\n      }\n      this.options.method = this.options.method.toUpperCase();\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\n        fallback.parentNode.removeChild(fallback);\n      }\n      if (this.options.previewsContainer !== false) {\n        if (this.options.previewsContainer) {\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\n        } else {\n          this.previewsContainer = this.element;\n        }\n      }\n      if (this.options.clickable) {\n        if (this.options.clickable === true) {\n          this.clickableElements = [this.element];\n        } else {\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\n        }\n      }\n      this.init();\n    }\n\n    Dropzone.prototype.getAcceptedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getRejectedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (!file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getFilesWithStatus = function(status) {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === status) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getQueuedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.QUEUED);\n    };\n\n    Dropzone.prototype.getUploadingFiles = function() {\n      return this.getFilesWithStatus(Dropzone.UPLOADING);\n    };\n\n    Dropzone.prototype.getAddedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.ADDED);\n    };\n\n    Dropzone.prototype.getActiveFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.init = function() {\n      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;\n      if (this.element.tagName === \"form\") {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n      }\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }\n      if (this.clickableElements.length) {\n        setupHiddenFileInput = (function(_this) {\n          return function() {\n            if (_this.hiddenFileInput) {\n              _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);\n            }\n            _this.hiddenFileInput = document.createElement(\"input\");\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n            }\n            _this.hiddenFileInput.className = \"dz-hidden-input\";\n            if (_this.options.acceptedFiles != null) {\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\n            }\n            if (_this.options.capture != null) {\n              _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);\n            }\n            _this.hiddenFileInput.style.visibility = \"hidden\";\n            _this.hiddenFileInput.style.position = \"absolute\";\n            _this.hiddenFileInput.style.top = \"0\";\n            _this.hiddenFileInput.style.left = \"0\";\n            _this.hiddenFileInput.style.height = \"0\";\n            _this.hiddenFileInput.style.width = \"0\";\n            document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {\n              var file, files, _i, _len;\n              files = _this.hiddenFileInput.files;\n              if (files.length) {\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                  file = files[_i];\n                  _this.addFile(file);\n                }\n              }\n              _this.emit(\"addedfiles\", files);\n              return setupHiddenFileInput();\n            });\n          };\n        })(this);\n        setupHiddenFileInput();\n      }\n      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;\n      _ref1 = this.events;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        eventName = _ref1[_i];\n        this.on(eventName, this.options[eventName]);\n      }\n      this.on(\"uploadprogress\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"removedfile\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"canceled\", (function(_this) {\n        return function(file) {\n          return _this.emit(\"complete\", file);\n        };\n      })(this));\n      this.on(\"complete\", (function(_this) {\n        return function(file) {\n          if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n            return setTimeout((function() {\n              return _this.emit(\"queuecomplete\");\n            }), 0);\n          }\n        };\n      })(this));\n      noPropagation = function(e) {\n        e.stopPropagation();\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      };\n      this.listeners = [\n        {\n          element: this.element,\n          events: {\n            \"dragstart\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragstart\", e);\n              };\n            })(this),\n            \"dragenter\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.emit(\"dragenter\", e);\n              };\n            })(this),\n            \"dragover\": (function(_this) {\n              return function(e) {\n                var efct;\n                try {\n                  efct = e.dataTransfer.effectAllowed;\n                } catch (_error) {}\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n                noPropagation(e);\n                return _this.emit(\"dragover\", e);\n              };\n            })(this),\n            \"dragleave\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragleave\", e);\n              };\n            })(this),\n            \"drop\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.drop(e);\n              };\n            })(this),\n            \"dragend\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragend\", e);\n              };\n            })(this)\n          }\n        }\n      ];\n      this.clickableElements.forEach((function(_this) {\n        return function(clickableElement) {\n          return _this.listeners.push({\n            element: clickableElement,\n            events: {\n              \"click\": function(evt) {\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  _this.hiddenFileInput.click();\n                }\n                return true;\n              }\n            }\n          });\n        };\n      })(this));\n      this.enable();\n      return this.options.init.call(this);\n    };\n\n    Dropzone.prototype.destroy = function() {\n      var _ref;\n      this.disable();\n      this.removeAllFiles(true);\n      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n        this.hiddenFileInput = null;\n      }\n      delete this.element.dropzone;\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n    };\n\n    Dropzone.prototype.updateTotalUploadProgress = function() {\n      var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;\n      totalBytesSent = 0;\n      totalBytes = 0;\n      activeFiles = this.getActiveFiles();\n      if (activeFiles.length) {\n        _ref = this.getActiveFiles();\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          totalBytesSent += file.upload.bytesSent;\n          totalBytes += file.upload.total;\n        }\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;\n      } else {\n        totalUploadProgress = 100;\n      }\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    };\n\n    Dropzone.prototype._getParamName = function(n) {\n      if (typeof this.options.paramName === \"function\") {\n        return this.options.paramName(n);\n      } else {\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\n      }\n    };\n\n    Dropzone.prototype._renameFilename = function(name) {\n      if (typeof this.options.renameFilename !== \"function\") {\n        return name;\n      }\n      return this.options.renameFilename(name);\n    };\n\n    Dropzone.prototype.getFallbackForm = function() {\n      var existingFallback, fields, fieldsString, form;\n      if (existingFallback = this.getExistingFallback()) {\n        return existingFallback;\n      }\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n      if (this.options.dictFallbackText) {\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\n      }\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);\n      if (this.element.tagName !== \"FORM\") {\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);\n      } else {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        this.element.setAttribute(\"method\", this.options.method);\n      }\n      return form != null ? form : fields;\n    };\n\n    Dropzone.prototype.getExistingFallback = function() {\n      var fallback, getFallback, tagName, _i, _len, _ref;\n      getFallback = function(elements) {\n        var el, _i, _len;\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )fallback($| )/.test(el.className)) {\n            return el;\n          }\n        }\n      };\n      _ref = [\"div\", \"form\"];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        tagName = _ref[_i];\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n          return fallback;\n        }\n      }\n    };\n\n    Dropzone.prototype.setupEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.addEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.removeEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.removeEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.disable = function() {\n      var file, _i, _len, _ref, _results;\n      this.clickableElements.forEach(function(element) {\n        return element.classList.remove(\"dz-clickable\");\n      });\n      this.removeEventListeners();\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        _results.push(this.cancelUpload(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.enable = function() {\n      this.clickableElements.forEach(function(element) {\n        return element.classList.add(\"dz-clickable\");\n      });\n      return this.setupEventListeners();\n    };\n\n    Dropzone.prototype.filesize = function(size) {\n      var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\n      selectedSize = 0;\n      selectedUnit = \"b\";\n      if (size > 0) {\n        units = ['TB', 'GB', 'MB', 'KB', 'b'];\n        for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\n          unit = units[i];\n          cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n          if (size >= cutoff) {\n            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n            selectedUnit = unit;\n            break;\n          }\n        }\n        selectedSize = Math.round(10 * selectedSize) / 10;\n      }\n      return \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;\n    };\n\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {\n          this.emit('maxfilesreached', this.files);\n        }\n        return this.element.classList.add(\"dz-max-files-reached\");\n      } else {\n        return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n    };\n\n    Dropzone.prototype.drop = function(e) {\n      var files, items;\n      if (!e.dataTransfer) {\n        return;\n      }\n      this.emit(\"drop\", e);\n      files = e.dataTransfer.files;\n      this.emit(\"addedfiles\", files);\n      if (files.length) {\n        items = e.dataTransfer.items;\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {\n          this._addFilesFromItems(items);\n        } else {\n          this.handleFiles(files);\n        }\n      }\n    };\n\n    Dropzone.prototype.paste = function(e) {\n      var items, _ref;\n      if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {\n        return;\n      }\n      this.emit(\"paste\", e);\n      items = e.clipboardData.items;\n      if (items.length) {\n        return this._addFilesFromItems(items);\n      }\n    };\n\n    Dropzone.prototype.handleFiles = function(files) {\n      var file, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        _results.push(this.addFile(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromItems = function(items) {\n      var entry, item, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = items.length; _i < _len; _i++) {\n        item = items[_i];\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\n          if (entry.isFile) {\n            _results.push(this.addFile(item.getAsFile()));\n          } else if (entry.isDirectory) {\n            _results.push(this._addFilesFromDirectory(entry, entry.name));\n          } else {\n            _results.push(void 0);\n          }\n        } else if (item.getAsFile != null) {\n          if ((item.kind == null) || item.kind === \"file\") {\n            _results.push(this.addFile(item.getAsFile()));\n          } else {\n            _results.push(void 0);\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {\n      var dirReader, errorHandler, readEntries;\n      dirReader = directory.createReader();\n      errorHandler = function(error) {\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      };\n      readEntries = (function(_this) {\n        return function() {\n          return dirReader.readEntries(function(entries) {\n            var entry, _i, _len;\n            if (entries.length > 0) {\n              for (_i = 0, _len = entries.length; _i < _len; _i++) {\n                entry = entries[_i];\n                if (entry.isFile) {\n                  entry.file(function(file) {\n                    if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                      return;\n                    }\n                    file.fullPath = \"\" + path + \"/\" + file.name;\n                    return _this.addFile(file);\n                  });\n                } else if (entry.isDirectory) {\n                  _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);\n                }\n              }\n              readEntries();\n            }\n            return null;\n          }, errorHandler);\n        };\n      })(this);\n      return readEntries();\n    };\n\n    Dropzone.prototype.accept = function(file, done) {\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n        return done(this.options.dictInvalidFileType);\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n        return this.emit(\"maxfilesexceeded\", file);\n      } else {\n        return this.options.accept.call(this, file, done);\n      }\n    };\n\n    Dropzone.prototype.addFile = function(file) {\n      file.upload = {\n        progress: 0,\n        total: file.size,\n        bytesSent: 0\n      };\n      this.files.push(file);\n      file.status = Dropzone.ADDED;\n      this.emit(\"addedfile\", file);\n      this._enqueueThumbnail(file);\n      return this.accept(file, (function(_this) {\n        return function(error) {\n          if (error) {\n            file.accepted = false;\n            _this._errorProcessing([file], error);\n          } else {\n            file.accepted = true;\n            if (_this.options.autoQueue) {\n              _this.enqueueFile(file);\n            }\n          }\n          return _this._updateMaxFilesReachedClass();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.enqueueFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        this.enqueueFile(file);\n      }\n      return null;\n    };\n\n    Dropzone.prototype.enqueueFile = function(file) {\n      if (file.status === Dropzone.ADDED && file.accepted === true) {\n        file.status = Dropzone.QUEUED;\n        if (this.options.autoProcessQueue) {\n          return setTimeout(((function(_this) {\n            return function() {\n              return _this.processQueue();\n            };\n          })(this)), 0);\n        }\n      } else {\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n    };\n\n    Dropzone.prototype._thumbnailQueue = [];\n\n    Dropzone.prototype._processingThumbnail = false;\n\n    Dropzone.prototype._enqueueThumbnail = function(file) {\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);\n        return setTimeout(((function(_this) {\n          return function() {\n            return _this._processThumbnailQueue();\n          };\n        })(this)), 0);\n      }\n    };\n\n    Dropzone.prototype._processThumbnailQueue = function() {\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n        return;\n      }\n      this._processingThumbnail = true;\n      return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {\n        return function() {\n          _this._processingThumbnail = false;\n          return _this._processThumbnailQueue();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.removeFile = function(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        this.cancelUpload(file);\n      }\n      this.files = without(this.files, file);\n      this.emit(\"removedfile\", file);\n      if (this.files.length === 0) {\n        return this.emit(\"reset\");\n      }\n    };\n\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {\n      var file, _i, _len, _ref;\n      if (cancelIfNecessary == null) {\n        cancelIfNecessary = false;\n      }\n      _ref = this.files.slice();\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n          this.removeFile(file);\n        }\n      }\n      return null;\n    };\n\n    Dropzone.prototype.createThumbnail = function(file, callback) {\n      var fileReader;\n      fileReader = new FileReader;\n      fileReader.onload = (function(_this) {\n        return function() {\n          if (file.type === \"image/svg+xml\") {\n            _this.emit(\"thumbnail\", file, fileReader.result);\n            if (callback != null) {\n              callback();\n            }\n            return;\n          }\n          return _this.createThumbnailFromUrl(file, fileReader.result, callback);\n        };\n      })(this);\n      return fileReader.readAsDataURL(file);\n    };\n\n    Dropzone.prototype.createThumbnailFromUrl = function(file, imageUrl, callback, crossOrigin) {\n      var img;\n      img = document.createElement(\"img\");\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n      img.onload = (function(_this) {\n        return function() {\n          var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;\n          file.width = img.width;\n          file.height = img.height;\n          resizeInfo = _this.options.resize.call(_this, file);\n          if (resizeInfo.trgWidth == null) {\n            resizeInfo.trgWidth = resizeInfo.optWidth;\n          }\n          if (resizeInfo.trgHeight == null) {\n            resizeInfo.trgHeight = resizeInfo.optHeight;\n          }\n          canvas = document.createElement(\"canvas\");\n          ctx = canvas.getContext(\"2d\");\n          canvas.width = resizeInfo.trgWidth;\n          canvas.height = resizeInfo.trgHeight;\n          drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n          thumbnail = canvas.toDataURL(\"image/png\");\n          _this.emit(\"thumbnail\", file, thumbnail);\n          if (callback != null) {\n            return callback();\n          }\n        };\n      })(this);\n      if (callback != null) {\n        img.onerror = callback;\n      }\n      return img.src = imageUrl;\n    };\n\n    Dropzone.prototype.processQueue = function() {\n      var i, parallelUploads, processingLength, queuedFiles;\n      parallelUploads = this.options.parallelUploads;\n      processingLength = this.getUploadingFiles().length;\n      i = processingLength;\n      if (processingLength >= parallelUploads) {\n        return;\n      }\n      queuedFiles = this.getQueuedFiles();\n      if (!(queuedFiles.length > 0)) {\n        return;\n      }\n      if (this.options.uploadMultiple) {\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n      } else {\n        while (i < parallelUploads) {\n          if (!queuedFiles.length) {\n            return;\n          }\n          this.processFile(queuedFiles.shift());\n          i++;\n        }\n      }\n    };\n\n    Dropzone.prototype.processFile = function(file) {\n      return this.processFiles([file]);\n    };\n\n    Dropzone.prototype.processFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.processing = true;\n        file.status = Dropzone.UPLOADING;\n        this.emit(\"processing\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"processingmultiple\", files);\n      }\n      return this.uploadFiles(files);\n    };\n\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {\n      var file, files;\n      return files = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.files;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          if (file.xhr === xhr) {\n            _results.push(file);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Dropzone.prototype.cancelUpload = function(file) {\n      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;\n      if (file.status === Dropzone.UPLOADING) {\n        groupedFiles = this._getFilesWithXhr(file.xhr);\n        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {\n          groupedFile = groupedFiles[_i];\n          groupedFile.status = Dropzone.CANCELED;\n        }\n        file.xhr.abort();\n        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {\n          groupedFile = groupedFiles[_j];\n          this.emit(\"canceled\", groupedFile);\n        }\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", groupedFiles);\n        }\n      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {\n        file.status = Dropzone.CANCELED;\n        this.emit(\"canceled\", file);\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", [file]);\n        }\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    resolveOption = function() {\n      var args, option;\n      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (typeof option === 'function') {\n        return option.apply(this, args);\n      }\n      return option;\n    };\n\n    Dropzone.prototype.uploadFile = function(file) {\n      return this.uploadFiles([file]);\n    };\n\n    Dropzone.prototype.uploadFiles = function(files) {\n      var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\n      xhr = new XMLHttpRequest();\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.xhr = xhr;\n      }\n      method = resolveOption(this.options.method, files);\n      url = resolveOption(this.options.url, files);\n      xhr.open(method, url, true);\n      xhr.withCredentials = !!this.options.withCredentials;\n      response = null;\n      handleError = (function(_this) {\n        return function() {\n          var _j, _len1, _results;\n          _results = [];\n          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n            file = files[_j];\n            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }\n          return _results;\n        };\n      })(this);\n      updateProgress = (function(_this) {\n        return function(e) {\n          var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;\n          if (e != null) {\n            progress = 100 * e.loaded / e.total;\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n              file = files[_j];\n              file.upload = {\n                progress: progress,\n                total: e.total,\n                bytesSent: e.loaded\n              };\n            }\n          } else {\n            allFilesFinished = true;\n            progress = 100;\n            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {\n              file = files[_k];\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\n                allFilesFinished = false;\n              }\n              file.upload.progress = progress;\n              file.upload.bytesSent = file.upload.total;\n            }\n            if (allFilesFinished) {\n              return;\n            }\n          }\n          _results = [];\n          for (_l = 0, _len3 = files.length; _l < _len3; _l++) {\n            file = files[_l];\n            _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\n          }\n          return _results;\n        };\n      })(this);\n      xhr.onload = (function(_this) {\n        return function(e) {\n          var _ref;\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          response = xhr.responseText;\n          if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n            try {\n              response = JSON.parse(response);\n            } catch (_error) {\n              e = _error;\n              response = \"Invalid JSON response from server.\";\n            }\n          }\n          updateProgress();\n          if (!((200 <= (_ref = xhr.status) && _ref < 300))) {\n            return handleError();\n          } else {\n            return _this._finished(files, response, e);\n          }\n        };\n      })(this);\n      xhr.onerror = (function(_this) {\n        return function() {\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          return handleError();\n        };\n      })(this);\n      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;\n      progressObj.onprogress = updateProgress;\n      headers = {\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n      if (this.options.headers) {\n        extend(headers, this.options.headers);\n      }\n      for (headerName in headers) {\n        headerValue = headers[headerName];\n        if (headerValue) {\n          xhr.setRequestHeader(headerName, headerValue);\n        }\n      }\n      formData = new FormData();\n      if (this.options.params) {\n        _ref1 = this.options.params;\n        for (key in _ref1) {\n          value = _ref1[key];\n          formData.append(key, value);\n        }\n      }\n      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n        file = files[_j];\n        this.emit(\"sending\", file, xhr, formData);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"sendingmultiple\", files, xhr, formData);\n      }\n      if (this.element.tagName === \"FORM\") {\n        _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n          input = _ref2[_k];\n          inputName = input.getAttribute(\"name\");\n          inputType = input.getAttribute(\"type\");\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n            _ref3 = input.options;\n            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n              option = _ref3[_l];\n              if (option.selected) {\n                formData.append(inputName, option.value);\n              }\n            }\n          } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);\n          }\n        }\n      }\n      for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\n        formData.append(this._getParamName(i), files[i], this._renameFilename(files[i].name));\n      }\n      return this.submitRequest(xhr, formData, files);\n    };\n\n    Dropzone.prototype.submitRequest = function(xhr, formData, files) {\n      return xhr.send(formData);\n    };\n\n    Dropzone.prototype._finished = function(files, responseText, e) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.SUCCESS;\n        this.emit(\"success\", file, responseText, e);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"successmultiple\", files, responseText, e);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.ERROR;\n        this.emit(\"error\", file, message, xhr);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"errormultiple\", files, message, xhr);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    return Dropzone;\n\n  })(Emitter);\n\n  Dropzone.version = \"4.3.0\";\n\n  Dropzone.options = {};\n\n  Dropzone.optionsForElement = function(element) {\n    if (element.getAttribute(\"id\")) {\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n    } else {\n      return void 0;\n    }\n  };\n\n  Dropzone.instances = [];\n\n  Dropzone.forElement = function(element) {\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n    if ((element != null ? element.dropzone : void 0) == null) {\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }\n    return element.dropzone;\n  };\n\n  Dropzone.autoDiscover = true;\n\n  Dropzone.discover = function() {\n    var checkElements, dropzone, dropzones, _i, _len, _results;\n    if (document.querySelectorAll) {\n      dropzones = document.querySelectorAll(\".dropzone\");\n    } else {\n      dropzones = [];\n      checkElements = function(elements) {\n        var el, _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )dropzone($| )/.test(el.className)) {\n            _results.push(dropzones.push(el));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      };\n      checkElements(document.getElementsByTagName(\"div\"));\n      checkElements(document.getElementsByTagName(\"form\"));\n    }\n    _results = [];\n    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {\n      dropzone = dropzones[_i];\n      if (Dropzone.optionsForElement(dropzone) !== false) {\n        _results.push(new Dropzone(dropzone));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\n\n  Dropzone.isBrowserSupported = function() {\n    var capableBrowser, regex, _i, _len, _ref;\n    capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {\n        capableBrowser = false;\n      } else {\n        _ref = Dropzone.blacklistedBrowsers;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          regex = _ref[_i];\n          if (regex.test(navigator.userAgent)) {\n            capableBrowser = false;\n            continue;\n          }\n        }\n      }\n    } else {\n      capableBrowser = false;\n    }\n    return capableBrowser;\n  };\n\n  without = function(list, rejectedItem) {\n    var item, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = list.length; _i < _len; _i++) {\n      item = list[_i];\n      if (item !== rejectedItem) {\n        _results.push(item);\n      }\n    }\n    return _results;\n  };\n\n  camelize = function(str) {\n    return str.replace(/[\\-_](\\w)/g, function(match) {\n      return match.charAt(1).toUpperCase();\n    });\n  };\n\n  Dropzone.createElement = function(string) {\n    var div;\n    div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n  };\n\n  Dropzone.elementInside = function(element, container) {\n    if (element === container) {\n      return true;\n    }\n    while (element = element.parentNode) {\n      if (element === container) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  Dropzone.getElement = function(el, name) {\n    var element;\n    if (typeof el === \"string\") {\n      element = document.querySelector(el);\n    } else if (el.nodeType != null) {\n      element = el;\n    }\n    if (element == null) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }\n    return element;\n  };\n\n  Dropzone.getElements = function(els, name) {\n    var e, el, elements, _i, _j, _len, _len1, _ref;\n    if (els instanceof Array) {\n      elements = [];\n      try {\n        for (_i = 0, _len = els.length; _i < _len; _i++) {\n          el = els[_i];\n          elements.push(this.getElement(el, name));\n        }\n      } catch (_error) {\n        e = _error;\n        elements = null;\n      }\n    } else if (typeof els === \"string\") {\n      elements = [];\n      _ref = document.querySelectorAll(els);\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n        el = _ref[_j];\n        elements.push(el);\n      }\n    } else if (els.nodeType != null) {\n      elements = [els];\n    }\n    if (!((elements != null) && elements.length)) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }\n    return elements;\n  };\n\n  Dropzone.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) {\n      return accepted();\n    } else if (rejected != null) {\n      return rejected();\n    }\n  };\n\n  Dropzone.isValidFile = function(file, acceptedFiles) {\n    var baseMimeType, mimeType, validType, _i, _len;\n    if (!acceptedFiles) {\n      return true;\n    }\n    acceptedFiles = acceptedFiles.split(\",\");\n    mimeType = file.type;\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {\n      validType = acceptedFiles[_i];\n      validType = validType.trim();\n      if (validType.charAt(0) === \".\") {\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n    jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n        return new Dropzone(this, options);\n      });\n    };\n  }\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = Dropzone;\n  } else {\n    window.Dropzone = Dropzone;\n  }\n\n  Dropzone.ADDED = \"added\";\n\n  Dropzone.QUEUED = \"queued\";\n\n  Dropzone.ACCEPTED = Dropzone.QUEUED;\n\n  Dropzone.UPLOADING = \"uploading\";\n\n  Dropzone.PROCESSING = Dropzone.UPLOADING;\n\n  Dropzone.CANCELED = \"canceled\";\n\n  Dropzone.ERROR = \"error\";\n\n  Dropzone.SUCCESS = \"success\";\n\n\n  /*\n  \n  Bugfix for iOS 6 and 7\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel\n   */\n\n  detectVerticalSquash = function(img) {\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\n    iw = img.naturalWidth;\n    ih = img.naturalHeight;\n    canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    data = ctx.getImageData(0, 0, 1, ih).data;\n    sy = 0;\n    ey = ih;\n    py = ih;\n    while (py > sy) {\n      alpha = data[(py - 1) * 4 + 3];\n      if (alpha === 0) {\n        ey = py;\n      } else {\n        sy = py;\n      }\n      py = (ey + sy) >> 1;\n    }\n    ratio = py / ih;\n    if (ratio === 0) {\n      return 1;\n    } else {\n      return ratio;\n    }\n  };\n\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var vertSquashRatio;\n    vertSquashRatio = detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n\n\n  /*\n   * contentloaded.js\n   *\n   * Author: Diego Perini (diego.perini at gmail.com)\n   * Summary: cross-browser wrapper for DOMContentLoaded\n   * Updated: 20101020\n   * License: MIT\n   * Version: 1.2\n   *\n   * URL:\n   * http://javascript.nwbox.com/ContentLoaded/\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n   */\n\n  contentLoaded = function(win, fn) {\n    var add, doc, done, init, poll, pre, rem, root, top;\n    done = false;\n    top = true;\n    doc = win.document;\n    root = doc.documentElement;\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\n    pre = (doc.addEventListener ? \"\" : \"on\");\n    init = function(e) {\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n        return;\n      }\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n      if (!done && (done = true)) {\n        return fn.call(win, e.type || e);\n      }\n    };\n    poll = function() {\n      var e;\n      try {\n        root.doScroll(\"left\");\n      } catch (_error) {\n        e = _error;\n        setTimeout(poll, 50);\n        return;\n      }\n      return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n      if (doc.createEventObject && root.doScroll) {\n        try {\n          top = !win.frameElement;\n        } catch (_error) {}\n        if (top) {\n          poll();\n        }\n      }\n      doc[add](pre + \"DOMContentLoaded\", init, false);\n      doc[add](pre + \"readystatechange\", init, false);\n      return win[add](pre + \"load\", init, false);\n    }\n  };\n\n  Dropzone._autoDiscoverFunction = function() {\n    if (Dropzone.autoDiscover) {\n      return Dropzone.discover();\n    }\n  };\n\n  contentLoaded(window, Dropzone._autoDiscoverFunction);\n\n}).call(this);\n","/*! DataTables 1.10.13\n * ©2008-2016 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.13\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   Copyright 2008-2016 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t// root. This will give an error otherwise\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ ) {\n\t\t\t\t$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n\t\t\t\t\trequire('jquery') :\n\t\t\t\t\trequire('jquery')( root );\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}\n(function( $, window, document, undefined ) {\n\t\"use strict\";\n\n\t/**\n\t * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n\t * flexible tool, based upon the foundations of progressive enhancement,\n\t * which will add advanced interaction controls to any HTML table. For a\n\t * full list of features please refer to\n\t * [DataTables.net](href=\"http://datatables.net).\n\t *\n\t * Note that the `DataTable` object is not a global variable but is aliased\n\t * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n\t * be  accessed.\n\t *\n\t *  @class\n\t *  @param {object} [init={}] Configuration object for DataTables. Options\n\t *    are defined by {@link DataTable.defaults}\n\t *  @requires jQuery 1.7+\n\t *\n\t *  @example\n\t *    // Basic initialisation\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *  @example\n\t *    // Initialisation with configuration options - in this case, disable\n\t *    // pagination and sorting.\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable( {\n\t *        \"paginate\": false,\n\t *        \"sort\": false\n\t *      } );\n\t *    } );\n\t */\n\tvar DataTable = function ( options )\n\t{\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).$( sSelector, oOpts );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function ( traditional )\n\t\t{\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t\t) :\n\t\t\t\tnew _Api( this );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( data, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\t\tapi.rows.add( data ) :\n\t\t\t\tapi.row.add( data );\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).on('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw( false );\n\t\t\t}\n\t\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw( settings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).clear();\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\tthis.api( true ).row( nTr ).child.hide();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( target, callback, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar rows = api.rows( target );\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\t\n\t\t\trows.remove();\n\t\t\n\t\t\tif ( callback ) {\n\t\t\t\tcallback.call( this, settings, data );\n\t\t\t}\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn data;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( remove )\n\t\t{\n\t\t\tthis.api( true ).destroy( remove );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( complete )\n\t\t{\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api( true ).draw( complete );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\n\t\t\tapi.draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( src, col )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( src !== undefined ) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\t\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\t\tapi.row( src ).data() || null;\n\t\t\t}\n\t\t\n\t\t\treturn api.data().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row( iRow ).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( node )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\t\n\t\t\tif ( nodeName == 'TR' ) {\n\t\t\t\treturn api.row( node ).index();\n\t\t\t}\n\t\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\t\tvar cell = api.cell( node ).index();\n\t\t\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\treturn this.api( true )\n\t\t\t\t.row( nTr )\n\t\t\t\t.child( mHtml, sClass )\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).page( mAction );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tthis.api( true ).order( aaSort ).draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\t\tapi.row( mRow ).data( mData );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t\t}\n\t\t\n\t\t\tif ( bAction === undefined || bAction ) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\t\n\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.oApi = this.internal = _ext.internal;\n\n\t\t// Extend with old style plug-in API methods\n\t\tfor ( var fn in DataTable.ext.internal ) {\n\t\t\tif ( fn ) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\n\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\t\t\t\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\t\t\t\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif ( s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this) )\n\t\t\t\t{\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\t\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi   = _that.internal;\n\t\t\toSettings.oInit  = oInit;\n\t\t\t\n\t\t\tallSettings.push( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\t\t\t\n\t\t\tif ( oInit.oLanguage )\n\t\t\t{\n\t\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t}\n\t\t\t\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\t\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ],\n\t\t\t\t[ \"bJQueryUI\", \"bJUI\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\t\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\t// @todo Remove in 1.11\n\t\t\tif ( oInit.bJQueryUI )\n\t\t\t{\n\t\t\t\t/* Use the JUI classes object for display. You could clone the oStdClasses object if\n\t\t\t\t * you want to have multiple tables with multiple independent classes\n\t\t\t\t */\n\t\t\t\t$.extend( oClasses, DataTable.ext.oJUIClasses, oInit.oClasses );\n\t\t\t\n\t\t\t\tif ( oInit.sDom === defaults.sDom && defaults.sDom === \"lfrtip\" )\n\t\t\t\t{\n\t\t\t\t\t/* Set the DOM to use a layout suitable for jQuery UI's theming */\n\t\t\t\t\toSettings.sDom = '<\"H\"lfr>t<\"F\"ip>';\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif ( ! oSettings.renderer ) {\n\t\t\t\t\toSettings.renderer = 'jqueryui';\n\t\t\t\t}\n\t\t\t\telse if ( $.isPlainObject( oSettings.renderer ) && ! oSettings.renderer.header ) {\n\t\t\t\t\toSettings.renderer.header = 'jqueryui';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t}\n\t\t\t$this.addClass( oClasses.sTable );\n\t\t\t\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = $.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\t\t\t\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\t\n\t\t\tif ( oLanguage.sUrl )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json );\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t} ) ) !== -1 ) {\n\t\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\t\t\t\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\t\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\t\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\t\t\t\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tvar loadedInit = function () {\n\t\t\t\t/*\n\t\t\t\t * Sorting\n\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t */\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t\tif ( features.bSort ) {\n\t\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\t\n\t\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t\t} );\n\t\t\t\n\t\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t\t}\n\t\t\t\t}, 'sc' );\n\t\t\t\n\t\t\t\n\t\t\t\t/*\n\t\t\t\t * Final init\n\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t} );\n\t\t\t\n\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\tif ( thead.length === 0 ) {\n\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\t\ttbody = $('<tbody/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTBody = tbody[0];\n\t\t\t\n\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t\t}\n\t\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\tif ( oInit.aaData ) {\n\t\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t */\n\t\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Copy the data index array */\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t * language processor)\n\t\t\t\t */\n\t\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadedInit();\n\t\t\t}\n\t\t\t\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\n\t\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\t\n\t\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\t\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\t\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n]/g;\n\tvar _re_html = /<.*?>/g;\n\t\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\t\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\t\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk]/gi;\n\t\n\t\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\t\n\t\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\t\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\t\n\t\n\tvar _isNumber = function ( d, decimalPoint, formatted ) {\n\t\tvar strType = typeof d === 'string';\n\t\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\t\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\t\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\t\n\t\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\t\n\t\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\t\n\t\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\t\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\t\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\t\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _stripHtml = function ( d ) {\n\t\treturn d.replace( _re_html, '' );\n\t};\n\t\n\t\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\t\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\t\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t/**\n\t * DataTables utility methods\n\t * \n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function ( fn, freq ) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\t\n\t\t\treturn function () {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow  = +new Date(),\n\t\t\t\t\targs = arguments;\n\t\n\t\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\t\tclearTimeout( timer );\n\t\n\t\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t\t}, frequency );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function ( val ) {\n\t\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t\t}\n\t};\n\t\n\t\n\t\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\t\n\t\t$.each( o, function (key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\t\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\t\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\to._hungarianMap = map;\n\t}\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\t\n\t\tvar hungarianKey;\n\t\n\t\t$.each( user, function (key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\t\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\t\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( lang )\n\t{\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\tvar zeroRecords = lang.sZeroRecords;\n\t\n\t\t/* Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t * sZeroRecords - assuming that is given.\n\t\t */\n\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t}\n\t\n\t\t/* Likewise with loading records */\n\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t}\n\t\n\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\tif ( lang.sInfoThousands ) {\n\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t}\n\t\n\t\tvar decimal = lang.sDecimal;\n\t\tif ( decimal ) {\n\t\t\t_addNumericSort( decimal );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\t\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\t\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\t\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\t\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( dataSort && ! $.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\t\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\t\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\t\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\t\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\t\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\t\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\t\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\t\n\t\t\tn.remove();\n\t\t}\n\t\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\t\n\t\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce ( that, fn, init, start, end, inc )\n\t{\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\t\n\t\tif ( init !== undefined ) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\t\n\t\twhile ( i !== end ) {\n\t\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvalue = isSet ?\n\t\t\t\tfn( value, that[i], i, that ) :\n\t\t\t\tthat[i];\n\t\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\t\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\t\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\t\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif ( ! oCol.sWidthOrig ) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\t\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif ( t ) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\t\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions );\n\t\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\t\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\t\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\t\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\t\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t\t}\n\t\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( bAsc && !bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( !bAsc && bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( settings.oFeatures.bAutoWidth !== false )\n\t\t{\n\t\t\tvar columns = settings.aoColumns;\n\t\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\t\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t\t{\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\tvar vis = 0;\n\t\n\t\t// No reduce in IE8, use a loop for now\n\t\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn vis;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\t\n\t\t// For each column, spin over the \n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\t\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\t\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string\n\t\t\t\t\t\tif ( detectedType === 'html' ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( detectedType ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\t\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.targets !== undefined ?\n\t\t\t\t\tdef.targets :\n\t\t\t\t\tdef.aTargets;\n\t\n\t\t\t\tif ( ! $.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t} );\n\t\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\t\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\t\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\t\n\t\tvar id = oSettings.rowIdFn( aDataIn );\n\t\tif ( id !== undefined ) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\t\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t\t}\n\t\n\t\treturn iRow;\n\t}\n\t\n\t\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\t\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\t\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\t\n\t\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\t\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\t\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\t\n\t\tif ( cellData === null && type == 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\treturn cellData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\t\n\t\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\t\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Build an object of get functions, and wrap them in a single call */\n\t\t\tvar o = {};\n\t\t\t$.each( mSource, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = _fnGetObjectDataFn( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn mSource( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( $.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[mSource];\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn _fnSetObjectDataFn( mSource._ );\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Nothing to do when the data source is null */\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tmSource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( $.isArray( val ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n\t\t\t\t\t{\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) )\n\t\t\t\t{\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[mSource] = val;\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\t\n\t\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not\n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget, splice )\n\t{\n\t\tvar iTargetIndex = -1;\n\t\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( iTargetIndex != -1 && splice === undefined )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function ( cell, col ) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile ( cell.childNodes.length ) {\n\t\t\t\tcell.removeChild( cell.firstChild );\n\t\t\t}\n\t\n\t\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t\t};\n\t\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\t\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\t\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\t\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\t\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\t\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\t\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = $.trim(cell.innerHTML);\n\t\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\t\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t};\n\t\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\t\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\t\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\t\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\t\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\t\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\t\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen;\n\t\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\t\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\n\t\t\t\tnTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcells.push( nTd );\n\t\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t}\n\t\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass )\n\t\t\t\t{\n\t\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t\t}\n\t\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow] );\n\t\t}\n\t\n\t\t// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n\t\t// and deployed\n\t\trow.nTr.setAttribute( 'role', 'row' );\n\t}\n\t\n\t\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\t\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\t\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\t\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\tif ( createHeader ) {\n\t\t\trow = $('<tr/>').appendTo( thead );\n\t\t}\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $( column.nTh ).addClass( column.sClass );\n\t\n\t\t\tif ( createHeader ) {\n\t\t\t\tcell.appendTo( row );\n\t\t\t}\n\t\n\t\t\t// 1.11 move into sorting\n\t\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\t\tcell.addClass( column.sSortingClass );\n\t\n\t\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\t\n\t\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\t\tcell.html( column.sTitle );\n\t\t\t}\n\t\n\t\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\t\n\t\tif ( createHeader ) {\n\t\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t\t}\n\t\t\n\t\t/* ARIA role for the rows */\n\t \t$(thead).find('>tr').attr('role', 'row');\n\t\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );\n\t\t$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );\n\t\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif ( tfoot !== null ) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\t\n\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\t\n\t\tif ( ! aoSource )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\t\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\t\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\t\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings )\n\t{\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar i, iLen, n;\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\n\t\toSettings.bDrawing = true;\n\t\n\t\t/* Check and see if we have an initial draw position from state saving */\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\t\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j] );\n\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\t\n\t\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t\t.append( $('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t} ).html( sZero ) )[0];\n\t\t}\n\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\tvar body = $(oSettings.nTBody);\n\t\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\t\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\t\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\t\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\t\n\t\t_fnDraw( settings );\n\t\n\t\tsettings._drawHold = false;\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\t\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t\t} );\n\t\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\t\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\t\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\t\n\t\t\t\tinsert.append( nNewNode );\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t}\n\t\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( featureNode )\n\t\t\t{\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\t\n\t\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t\t{\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\t\n\t\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith( insert );\n\t\toSettings.nHolding = null;\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\taLayout.splice( 0, aLayout.length );\n\t\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\t\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\t\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn aReturn;\n\t}\n\t\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\t\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif ( data && $.isArray(data) ) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\t\n\t\t\t$.each( data, function (key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\t\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\t\n\t\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdata = tmp;\n\t\t}\n\t\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\t\tfn( json );\n\t\t};\n\t\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\t\n\t\t\tvar newData = $.isFunction( ajaxData ) ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\t\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = $.isFunction( ajaxData ) && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\t\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\t\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": function (json) {\n\t\t\t\tvar error = json.error || json.sError;\n\t\t\t\tif ( error ) {\n\t\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t\t}\n\t\n\t\t\t\toSettings.json = json;\n\t\t\t\tcallback( json );\n\t\t\t},\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\t\n\t\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\t\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\t\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\t\n\t\tif ( oSettings.fnServerData )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call( instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t} ),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t}\n\t\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t} ) );\n\t\t}\n\t\telse if ( $.isFunction( ajax ) )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\t\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tif ( settings.bAjaxDataGet ) {\n\t\t\tsettings.iDraw++;\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t_fnBuildAjax(\n\t\t\t\tsettings,\n\t\t\t\t_fnAjaxParameters( settings ),\n\t\t\t\tfunction(json) {\n\t\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten( settings ),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\t\n\t\tvar param = function ( name, value ) {\n\t\t\tdata.push( { 'name': name, 'value': value } );\n\t\t};\n\t\n\t\t// DataTables 1.9- compatible method\n\t\tparam( 'sEcho',          settings.iDraw );\n\t\tparam( 'iColumns',       columnCount );\n\t\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\t\tparam( 'iDisplayStart',  displayStart );\n\t\tparam( 'iDisplayLength', displayLength );\n\t\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\t\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\t\n\t\t\td.columns.push( {\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tparam( \"mDataProp_\"+i, dataProp );\n\t\n\t\t\tif ( features.bFilter ) {\n\t\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t\t}\n\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch', preSearch.sSearch );\n\t\t\tparam( 'bRegex', preSearch.bRegex );\n\t\t}\n\t\n\t\tif ( features.bSort ) {\n\t\t\t$.each( sort, function ( i, val ) {\n\t\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\t\n\t\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t\t} );\n\t\n\t\t\tparam( 'iSortingCols', sort.length );\n\t\t}\n\t\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif ( legacy === null ) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\t\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function ( old, modern ) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\t\n\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\tvar draw            = compat( 'sEcho',                'draw' );\n\t\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\t\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\t\n\t\tif ( draw ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\t\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\t\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\tsettings.bAjaxDataGet = false;\n\t\t_fnDraw( settings );\n\t\n\t\tif ( ! settings._bInitComplete ) {\n\t\t\t_fnInitComplete( settings, json );\n\t\t}\n\t\n\t\tsettings.bAjaxDataGet = true;\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\t\n\t\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\tfunction _fnAjaxDataSrc ( oSettings, json )\n\t{\n\t\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\t\n\t\t// Compatibility with 1.9-. In order to read from aaData, check if the\n\t\t// default has been changed, if not, check for aaData\n\t\tif ( dataSrc === 'data' ) {\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\t\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\t\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr+input;\n\t\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t} )\n\t\t\t.append( $('<label/>' ).append( str ) );\n\t\n\t\tvar searchFn = function() {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive\n\t\t\t\t} );\n\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t};\n\t\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\t\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.sSearch )\n\t\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\t\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch ( e ) {}\n\t\t\t}\n\t\t} );\n\t\n\t\treturn filter[0];\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t};\n\t\tvar fnRegex = function ( o ) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n\t\t\tfnSaveFilter( oInput );\n\t\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\t\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\t\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\t\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\t\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\t\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge( displayRows, rows );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n\t{\n\t\tif ( searchStr === '' ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar data;\n\t\tvar out = [];\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\t\n\t\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\t\n\t\t\tif ( rpSearch.test( data ) ) {\n\t\t\t\tout.push( display[i] );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aiDisplay = out;\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n\t{\n\t\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\tvar filtered = [];\n\t\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif ( DataTable.ext.search.length !== 0 ) {\n\t\t\tforce = true;\n\t\t}\n\t\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData( settings );\n\t\n\t\t// If the input is blank - we just want the full data set\n\t\tif ( input.length <= 0 ) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\t// New search - start from the master array\n\t\t\tif ( invalidated ||\n\t\t\t\t force ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\t\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\t\n\t\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\t\tfiltered.push( display[i] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tsettings.aiDisplay = filtered;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n\t{\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\t\t\n\t\tif ( smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t * \n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t} );\n\t\n\t\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t\t}\n\t\n\t\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n\t}\n\t\n\t\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\t\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\t\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar fomatters = DataTable.ext.type.search;\n\t\tvar wasInvalidated = false;\n\t\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\t\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\t\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\t\n\t\t\t\t\t\tif ( fomatters[ column.sType ] ) {\n\t\t\t\t\t\t\tcellData = fomatters[ column.sType ]( cellData );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n]/g, '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\t\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn wasInvalidated;\n\t}\n\t\n\t\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel ( obj )\n\t{\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\t\n\t\n\t\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung ( obj )\n\t{\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\t\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( settings )\n\t{\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t\t} );\n\t\n\t\tif ( ! nodes ) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\t\n\t\t\tn\n\t\t\t\t.attr( 'role', 'status' )\n\t\t\t\t.attr( 'aria-live', 'polite' );\n\t\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\t}\n\t\n\t\treturn n[0];\n\t}\n\t\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings )\n\t{\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif ( nodes.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\t\n\t\tif ( total !== max ) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros( settings, out );\n\t\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif ( callback !== null ) {\n\t\t\tout = callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\t\n\t\t$(nodes).html( out );\n\t}\n\t\n\t\n\tfunction _fnInfoMacros ( settings, str )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n\t}\n\t\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns, column;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\t\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( settings );\n\t\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( settings );\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t/* Calculate sizes for columns */\n\t\tif ( features.bAutoWidth ) {\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\n\t\t\tif ( column.sWidth ) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\t\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\t\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\t\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\t\n\t\t\t\t\t_fnReDraw( settings );\n\t\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings, json )\n\t{\n\t\tsettings._bInitComplete = true;\n\t\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif ( json || settings.oInit.aaData ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n\t}\n\t\n\t\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\t\n\t\t_fnLengthOverflow( settings );\n\t\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( settings )\n\t{\n\t\tvar\n\t\t\tclasses  = settings.oClasses,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = settings.aLengthMenu,\n\t\t\td2       = $.isArray( menu[0] ),\n\t\t\tlengths  = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\t\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId+'_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t} );\n\t\n\t\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\t\tselect[0][ i ] = new Option( language[i], lengths[i] );\n\t\t}\n\t\n\t\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\t\tif ( ! settings.aanFeatures.l ) {\n\t\t\tdiv[0].id = tableId+'_length';\n\t\t}\n\t\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t\t);\n\t\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.on( 'change.DT', function(e) {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\t\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn div[0];\n\t}\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\t\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( settings )\n\t{\n\t\tvar\n\t\t\ttype   = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function( settings ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\t\tfeatures = settings.aanFeatures;\n\t\n\t\tif ( ! modern ) {\n\t\t\tplugin.fnInit( settings, node, redraw );\n\t\t}\n\t\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( ! features.p )\n\t\t{\n\t\t\tnode.id = settings.sTableId+'_paginate';\n\t\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( settings ) {\n\t\t\t\t\tif ( modern ) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\t\n\t\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\t\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\t\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\t\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t  start = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\t\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\t\n\t\tif ( changed ) {\n\t\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\t\n\t\t\tif ( redraw ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t}\n\t\n\t\treturn changed;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( settings )\n\t{\n\t\treturn $('<div/>', {\n\t\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.insertBefore( settings.nTable )[0];\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\t\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Add the ARIA grid role to the table\n\t\ttable.attr( 'role', 'grid' );\n\t\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\t\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\t\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\t\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\t\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif ( scrollX ) {\n\t\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\t\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\t\n\t\t\t\tif ( footer ) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\n\t\t$(scrollBody).css(\n\t\t\tscrollY && scroll.bCollapse ? 'max-height' : 'height', \n\t\t\tscrollY\n\t\t);\n\t\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\t\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\t\n\t\treturn scroller[0];\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tscrollX        = scroll.sX,\n\t\t\tscrollXInner   = scroll.sXInner,\n\t\t\tscrollY        = scroll.sY,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivBodyStyle   = divBodyEl.style,\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\ttableEl        = table[0],\n\t\t\ttableStyle     = tableEl.style,\n\t\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\tie67           = browser.bScrollOversize,\n\t\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths=[], footerWidths=[],\n\t\t\theaderContent=[], footerContent=[],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\t\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\t\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\t\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\t\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\t\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t}\n\t\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\n\t\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\t\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif ( ! scrollX )\n\t\t{\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\t\n\t\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t} );\n\t\n\t\tif ( footer ) {\n\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif ( scrollX === \"\" ) {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\t\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t\t}\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\telse if ( scrollXInner !== \"\" ) {\n\t\t\t// legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\t\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\t\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\theaderContent.push( nSizer.innerHTML );\n\t\t\theaderWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, headerSrcEls );\n\t\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t// Only apply widths to the DataTables detected header cells - this\n\t\t\t// prevents complex headers from having contradictory sizes applied\n\t\t\tif ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {\n\t\t\t\tnToSize.style.width = headerWidths[i];\n\t\t\t}\n\t\t}, headerTrgEls );\n\t\n\t\t$(headerSrcEls).height(0);\n\t\n\t\t/* Same again with the footer if we have one */\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t\t}, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls );\n\t\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\t\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+headerContent[i]+'</div>';\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls );\n\t\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+footerContent[i]+'</div>';\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif ( table.outerWidth() < sanityWidth )\n\t\t{\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth+barWidth :\n\t\t\t\t\tsanityWidth;\n\t\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t\t}\n\t\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcorrection = '100%';\n\t\t}\n\t\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss( correction );\n\t\tdivHeaderStyle.width = _fnStringToCss( correction );\n\t\n\t\tif ( footer ) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif ( ! scrollY ) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif ( ie67 ) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\t\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\t}\n\t\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore( table.children('thead') );\n\t\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.scroll();\n\t\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\t\n\t\twhile ( i < iLen ) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\n\t\t\twhile ( nNode1 ) {\n\t\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\t\tif ( an2 ) {\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t\n\t\n\tvar __re_html_remove = /<.*?>/g;\n\t\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\t\n\t\tvar styleWidth = table.style.width;\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\t\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\tif ( column.sWidth !== null ) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\t\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\t\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\t\n\t\t\t\tif ( colIdx !== null ) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t\t.removeAttr( 'id' );\n\t\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\t\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t\t.append( $(oSettings.nTFoot).clone() );\n\t\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\t\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\t\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t\t'';\n\t\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif ( oSettings.aoData.length ) {\n\t\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\t\n\t\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t\t.clone( false )\n\t\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t\t.appendTo( tr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\t\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append( tmpTable )\n\t\t\t\t.appendTo( tableContainer );\n\t\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif ( scrollX && scrollXInner ) {\n\t\t\t\ttmpTable.width( scrollXInner );\n\t\t\t}\n\t\t\telse if ( scrollX ) {\n\t\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\t\ttmpTable.removeAttr('width');\n\t\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( scrollY ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t\telse if ( tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableWidthAttr );\n\t\t\t}\n\t\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\t\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\t\tcell.outerWidth();\n\t\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\t\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t\t}\n\t\n\t\t\ttable.style.width = _fnStringToCss( total );\n\t\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\t\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\t\n\t\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\t\tvar bindResize = function () {\n\t\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t} ) );\n\t\t\t};\n\t\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif ( ie67 ) {\n\t\t\t\tsetTimeout( bindResize, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbindResize();\n\t\t\t}\n\t\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnThrottle = DataTable.util.throttle;\n\t\n\t\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( width, parent )\n\t{\n\t\tif ( ! width ) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar n = $('<div/>')\n\t\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t\t.appendTo( parent || document.body );\n\t\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\t\n\t\treturn val;\n\t}\n\t\n\t\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( settings, colIdx )\n\t{\n\t\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\t\tif ( idx < 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\t\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar s, max=-1, maxIdx = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\t\ts = s.replace( __re_html_remove, '' );\n\t\t\ts = s.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > max ) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn maxIdx;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\t\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\t\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\t\n\t\n\t\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [],\n\t\t\tadd = function ( a ) {\n\t\t\t\tif ( a.length && ! $.isArray( a[0] ) ) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push( a );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge( nestedSort, a );\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( $.isArray( fixed ) ) {\n\t\t\tadd( fixed );\n\t\t}\n\t\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\tadd( fixed.pre );\n\t\t}\n\t\n\t\tadd( settings.aaSorting );\n\t\n\t\tif (fixedObj && fixed.post ) {\n\t\t\tadd( fixed.post );\n\t\t}\n\t\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\t\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\t\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t\t}\n\t\n\t\t\t\taSort.push( {\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\treturn aSort;\n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort ( oSettings )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\taSort = _fnSortFlatten( oSettings );\n\t\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\t\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif ( sortCol.formatter ) {\n\t\t\t\tformatters++;\n\t\t\t}\n\t\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif ( formatters === aSort.length ) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\t\n\t\n\tfunction _fnSortAria ( settings )\n\t{\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten( settings );\n\t\tvar oAria = settings.oLanguage.oAria;\n\t\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tvar th = col.nTh;\n\t\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\t\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( col.bSortable ) {\n\t\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\t\n\t\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\t\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener ( settings, colIdx, append, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t\t}\n\t\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\t\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\t\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\t\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\t\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\t\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\t\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\t\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw( settings );\n\t\n\t\t// callback used for async user interaction\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback( settings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\n\t\t_fnBindAction( attachTo, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( col.bSortable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\t\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\t\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\t\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aLastSort = sort;\n\t}\n\t\n\t\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, idx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\t\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t\t);\n\t\t}\n\t\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\t\n\t\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\t\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter( cellData ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif ( !settings.oFeatures.bStateSave || settings.bDestroying )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\t\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\t\tsettings.oSavedState = state;\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, oInit, callback )\n\t{\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tvar loaded = function ( s ) {\n\t\t\tif ( ! s || ! s.time ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t\t// cancelling of loading by returning false\n\t\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, state] );\n\t\t\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Reject old data\n\t\t\tvar duration = settings.iStateDuration;\n\t\t\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\t\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Store the saved state so it might be accessed at any time\n\t\t\tsettings.oLoadedState = $.extend( true, {}, state );\n\t\n\t\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t\t// subscribed events\n\t\t\tif ( s.start !== undefined ) {\n\t\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t}\n\t\t\tif ( s.length !== undefined ) {\n\t\t\t\tsettings._iDisplayLength   = s.length;\n\t\t\t}\n\t\n\t\t\t// Order\n\t\t\tif ( s.order !== undefined ) {\n\t\t\t\tsettings.aaSorting = [];\n\t\t\t\t$.each( s.order, function ( i, col ) {\n\t\t\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t\t\t[ 0, col[1] ] :\n\t\t\t\t\t\tcol\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Search\n\t\t\tif ( s.search !== undefined ) {\n\t\t\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t\t\t}\n\t\n\t\t\t// Columns\n\t\t\t// \n\t\t\tif ( s.columns ) {\n\t\t\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\t\t\tvar col = s.columns[i];\n\t\n\t\t\t\t\t// Visibility\n\t\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Search\n\t\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, state] );\n\t\t\tcallback();\n\t\t}\n\t\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\t\n\t\tif ( state !== undefined ) {\n\t\t\tloaded( state );\n\t\t}\n\t\t// otherwise, wait for the loaded callback to be executed\n\t}\n\t\n\t\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( table )\n\t{\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\t\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\t\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'http://datatables.net/tn/'+tn;\n\t\t}\n\t\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\t\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t\t}\n\t\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( $.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\t\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\t\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\t\tval = extender[prop];\n\t\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t\tn.blur(); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n\t{\n\t\tvar ret = [];\n\t\n\t\tif ( callbackArr ) {\n\t\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( eventName !== null ) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\t\n\t\t\t$(settings.nTable).trigger( e, args );\n\t\n\t\t\tret.push( e.result );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\t\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\t\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\t\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\tsettings._iDisplayStart = start;\n\t}\n\t\n\t\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\t\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\t\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\t\n\t\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\t\n\n\t\n\t\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\t\n\t\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\t\n\t\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map( settings, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = $.inArray( mixed, tables );\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed);\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\t\n\t\tif ( jq ) {\n\t\t\treturn jq.map( function(i) {\n\t\t\t\tidx = $.inArray( this, tables );\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t} ).toArray();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\t\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings = settings.concat( a );\n\t\t\t}\n\t\t};\n\t\n\t\tif ( $.isArray( context ) ) {\n\t\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\t\n\t\t// Remove duplicates\n\t\tthis.context = _unique( settings );\n\t\n\t\t// Initial data\n\t\tif ( data ) {\n\t\t\t$.merge( this, data );\n\t\t}\n\t\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\t\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\t\n\tDataTable.Api = _Api;\n\t\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\t\n\t\n\t\tconcat:  __arrayProto.concat,\n\t\n\t\n\t\tcontext: [], // array of table settings objects\n\t\n\t\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\t\n\t\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\t\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\t\n\t\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.filter ) {\n\t\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\t\ta.push( this[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\t\n\t\n\t\tjoin:    __arrayProto.join,\n\t\n\t\n\t\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t\t{\n\t\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( this[i] === obj ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\t\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\t\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\t\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\t\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\t\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t\t{\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t\t},\n\t\n\t\n\t\tlength:  0,\n\t\n\t\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.map ) {\n\t\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn el[ prop ];\n\t\t\t} );\n\t\t},\n\t\n\t\tpop:     __arrayProto.pop,\n\t\n\t\n\t\tpush:    __arrayProto.push,\n\t\n\t\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t\t},\n\t\n\t\n\t\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t\t},\n\t\n\t\n\t\treverse: __arrayProto.reverse,\n\t\n\t\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\t\n\t\n\t\tshift:   __arrayProto.shift,\n\t\n\t\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\t\n\t\n\t\tsplice:  __arrayProto.splice,\n\t\n\t\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\t\n\t\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this) );\n\t\t},\n\t\n\t\n\t\tunshift: __arrayProto.unshift\n\t} );\n\t\n\t\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\tj, jen,\n\t\t\tstruct, inner,\n\t\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\t\treturn function () {\n\t\t\t\t\tvar ret = fn.apply( scope, arguments );\n\t\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\t\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = typeof struct.val === 'function' ?\n\t\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\t\t$.isPlainObject( struct.val ) ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\t\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\t\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\t\n\t\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\t\n\t// \t_Api.extend( inst, obj );\n\t// };\n\t\n\t\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\t\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\t\n\t\tvar find = function ( src, name ) {\n\t\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\t\tif ( src[i].name === name ) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\t\n\t\t\tvar src = find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   []\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\t\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\t\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\t\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\t$.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\t\n\t\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\t\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map( a, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function (i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\t\n\t\n\t\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\t\n\t\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\t\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\t\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function ( action ) {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\t\n\t\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\t\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\t\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\t\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\t\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\t\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\t\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\t\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );\n\t\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\t\n\t\treturn _unique( out );\n\t};\n\t\n\t\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\t\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\t\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\t\n\t\n\tvar _selector_first = function ( inst )\n\t{\n\t\t// Reduce the API instance to the first item found\n\t\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\t\tif ( inst[i].length > 0 ) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [ inst.context[i] ];\n\t\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\t\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\t\n\t\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\t\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\telse if ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and fitler=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\ta = search == 'none' ?\n\t\t\t\tdisplayMaster.slice() :                      // no search\n\t\t\t\tsearch == 'applied' ?\n\t\t\t\t\tdisplayFiltered.slice() :                // applied search\n\t\t\t\t\t$.map( displayMaster, function (el, i) { // removed search\n\t\t\t\t\t\treturn $.inArray( el, displayFiltered ) === -1 ? el : null;\n\t\t\t\t\t} );\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t};\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\t\n\t\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar rows;\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\n\t\t\tif ( ! rows ) {\n\t\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t\t}\n\t\n\t\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\t\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\t\tvar row = settings.aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\t\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tif ( sel._DT_RowIndex !== undefined ) {\n\t\t\t\t\treturn [ sel._DT_RowIndex ]; // Property added by DT for fast lookup\n\t\t\t\t}\n\t\t\t\telse if ( sel._DT_CellIndex ) {\n\t\t\t\t\treturn [ sel._DT_CellIndex.row ];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\t\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\t\n\t\treturn _selector_run( 'row', selector, run, settings, opts );\n\t};\n\t\n\t\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\t\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new _Api( context, a );\n\t} );\n\t\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tvar that = this;\n\t\n\t\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\t\n\t\t\tdata.splice( row, 1 );\n\t\n\t\t\t// Update the cached indexes\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\t\n\t\t\t\t// Rows\n\t\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\t\n\t\t\t\t// Cells\n\t\t\t\tif ( loopCells !== null ) {\n\t\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\t\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\t\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t} );\n\t\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\t\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t$.merge( modRows, newRows );\n\t\n\t\treturn modRows;\n\t} );\n\t\n\t\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\tctx[0].aoData[ this[0] ]._aData = data;\n\t\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\t\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\t\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\t\n\t\n\t\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( $.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td/></tr>').addClass( k );\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\t\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\t\n\t\taddRow( data, klass );\n\t\n\t\tif ( row._details ) {\n\t\t\trow._details.detach();\n\t\t}\n\t\n\t\trow._details = $(rows);\n\t\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\t\n\t\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\t\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\t\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\t\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\t\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t}\n\t\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-visibility'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\t\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\t\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\t\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\t\n\t\t\t\t\tif ( row._details ) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\t\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function ( show ) {   // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length && this.length ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\t\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\t\n\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\t\n\t\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t\t}\n\t\treturn a;\n\t};\n\t\n\t\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\tnodes = _pluck( columns, 'nTh' );\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\t\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\t\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\t\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\t\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\t\n\t\n\tvar __setColumnVis = function ( settings, column, vis ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\t\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\t\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\t\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\t\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\t\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t_fnSaveState( settings );\n\t};\n\t\n\t\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t__setColumnVis( settings, column, vis );\n\t\t} );\n\t\n\t\t// Group the column visibility changes\n\t\tif ( vis !== undefined ) {\n\t\t\t// Second loop once the first is done for events\n\t\t\tthis.iterator( 'column', function ( settings, column ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t} );\n\t\n\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\tthis.columns.adjust();\n\t\t\t}\n\t\t}\n\t\n\t\treturn ret;\n\t} );\n\t\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\t\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\t\n\t\n\t\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $( [].concat.apply([], cells) );\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\t\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\t\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\treturn [s];\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\t\n\t\n\t\n\t\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\t\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector, opts );\n\t\tvar rows = this.rows( rowSelector, opts );\n\t\tvar a, i, ien, j, jen;\n\t\n\t\tvar cells = this.iterator( 'table', function ( settings, idx ) {\n\t\t\ta = [];\n\t\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn a;\n\t\t}, 1 );\n\t\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\t\n\t\treturn cells;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\t\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\t\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( order.length && ! $.isArray( order[0] ) ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call( arguments );\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener( settings, node, column, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\t\n\t\t\treturn $.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\t\n\t\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\t\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tvar sort = [];\n\t\n\t\t\t$.each( that[i], function (j, col) {\n\t\t\t\tsort.push( [ col, dir ] );\n\t\t\t} );\n\t\n\t\t\tsettings.aaSorting = sort;\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} ), 1 );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\t\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\t\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t\t} );\n\t\t}\n\t);\n\t\n\t/*\n\t * State API methods\n\t */\n\t\n\t_api_register( 'state()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n\t{\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\t\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\t\n\t\tif ( table instanceof DataTable.Api ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\t\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn is;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function ( visible )\n\t{\n\t\tvar api = false;\n\t\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\t\n\t\tvar a = $.map( DataTable.settings, function (o) {\n\t\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\t\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\t\n\t\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\t\te+'.dt' :\n\t\t\t\t\te;\n\t\t\t\t} ).join( ' ' );\n\t\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\t\n\t\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\t\n\t\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar orig      = settings.nTableWrapper.parentNode;\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\t\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\t\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\t\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-'+settings.sInstance);\n\t\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\t\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\t\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\t\n\t\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\t\n\t\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t\t);\n\t\n\t\t\tif ( settings.bJUI ) {\n\t\t\t\t$('th span.'+classes.sSortIcon+ ', td span.'+classes.sSortIcon, thead).detach();\n\t\t\t\t$('th, td', thead).each( function () {\n\t\t\t\t\tvar wrapper = $('div.'+classes.sSortJUIWrapper, this);\n\t\t\t\t\t$(this).append( wrapper.contents() );\n\t\t\t\t\twrapper.detach();\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\t\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\t\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\t\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.sTable );\n\t\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\t\n\t\t\t\tif ( ien ) {\n\t\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\t\n\t\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t} );\n\t\n\t\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\t\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\t\n\t\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\t\n\t\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n\t} );\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.10.13\";\n\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\t\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\t\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\t\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\t\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\t\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\t\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\t\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\t\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\t\n\t\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would at around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit.\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\n\t\t * slightly different and additional mark-up from what DataTables has\n\t\t * traditionally used).\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.jQueryUI\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"jQueryUI\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bJQueryUI\": false,\n\t\n\t\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t *    should be passed the loaded state object.\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              callback( json );\n\t\t *            }\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\n\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *  @default Processing...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"Processing...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\t\n\t\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t *  \n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\t\n\t\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\t\n\t\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults );\n\t\n\t\n\t\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\t\n\t\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\t\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"platform.details.0\" },\n\t\t *          { \"data\": \"platform.details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults.column );\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all fro DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\t\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\t\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\t\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\t\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\t\n\t\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\t\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\t\n\t\t/**\n\t\t * Note if draw should be blocked while getting data\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bAjaxDataGet\": true,\n\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\t\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\t\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\t\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\n\t\t/**\n\t\t * Flag to indicate if jQuery UI marking and classes should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bJUI\": null,\n\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\t\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\t\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\t\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\t\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\t\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\t\n\t\n\t/**\n\t * DataTables extensions\n\t * \n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\t\n\t\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\t\n\t\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\t\n\t\n\t\t/**\n\t\t * Error reporting.\n\t\t * \n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t * \n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t * \n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t * \n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t * \n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\t\n\t\n\t\t/**\n\t\t * Row searching.\n\t\t * \n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\t\n\t\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t * \n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\t\n\t\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t * \n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\t\n\t\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t * \n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t * \n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t * \n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\t\n\t\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! $.isNumeric( data.substring(1) ) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t * \n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t * \n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\t\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\t\n\t\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatiblity only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\t\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\t\n\t\n\t\t/**\n\t\t * jQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\t\n\t\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\t\n\t\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\t\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\t\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\t\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\t\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_asc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_desc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\t\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\t\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\t\n\t\n\t(function() {\n\t\n\t// Reused strings for better compression. Closure compiler appears to have a\n\t// weird edge case where it is trying to expand strings rather than use the\n\t// variable version. This results in about 200 bytes being added, for very\n\t// little preference benefit since it this run on script load only.\n\tvar _empty = '';\n\t_empty = '';\n\t\n\tvar _stateDefault = _empty + 'ui-state-default';\n\tvar _sortIcon     = _empty + 'css_right ui-icon ui-icon-';\n\tvar _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';\n\t\n\t$.extend( DataTable.ext.oJUIClasses, DataTable.ext.classes, {\n\t\t/* Full numbers paging buttons */\n\t\t\"sPageButton\":         \"fg-button ui-button \"+_stateDefault,\n\t\t\"sPageButtonActive\":   \"ui-state-disabled\",\n\t\t\"sPageButtonDisabled\": \"ui-state-disabled\",\n\t\n\t\t/* Features */\n\t\t\"sPaging\": \"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi \"+\n\t\t\t\"ui-buttonset-multi paging_\", /* Note that the type is postfixed */\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\":            _stateDefault+\" sorting_asc\",\n\t\t\"sSortDesc\":           _stateDefault+\" sorting_desc\",\n\t\t\"sSortable\":           _stateDefault+\" sorting\",\n\t\t\"sSortableAsc\":        _stateDefault+\" sorting_asc_disabled\",\n\t\t\"sSortableDesc\":       _stateDefault+\" sorting_desc_disabled\",\n\t\t\"sSortableNone\":       _stateDefault+\" sorting_disabled\",\n\t\t\"sSortJUIAsc\":         _sortIcon+\"triangle-1-n\",\n\t\t\"sSortJUIDesc\":        _sortIcon+\"triangle-1-s\",\n\t\t\"sSortJUI\":            _sortIcon+\"carat-2-n-s\",\n\t\t\"sSortJUIAscAllowed\":  _sortIcon+\"carat-1-n\",\n\t\t\"sSortJUIDescAllowed\": _sortIcon+\"carat-1-s\",\n\t\t\"sSortJUIWrapper\":     \"DataTables_sort_wrapper\",\n\t\t\"sSortIcon\":           \"DataTables_sort_icon\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollHead\": \"dataTables_scrollHead \"+_stateDefault,\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot \"+_stateDefault,\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\":  _stateDefault,\n\t\t\"sFooterTH\":  _stateDefault,\n\t\t\"sJUIHeader\": _headerFooter+\" ui-corner-tl ui-corner-tr\",\n\t\t\"sJUIFooter\": _headerFooter+\" ui-corner-bl ui-corner-br\"\n\t} );\n\t\n\t}());\n\t\n\t\n\t\n\tvar extPagination = DataTable.ext.pager;\n\t\n\tfunction _numbers ( page, pages ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor( buttons / 2 ),\n\t\t\ti = 1;\n\t\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range( 0, pages );\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range( 0, buttons-2 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\t\n\t\n\t$.extend( extPagination, {\n\t\tsimple: function ( page, pages ) {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\t\n\t\tfull: function ( page, pages ) {\n\t\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t\t},\n\t\n\t\tnumbers: function ( page, pages ) {\n\t\t\treturn [ _numbers(page, pages) ];\n\t\t},\n\t\n\t\tsimple_numbers: function ( page, pages ) {\n\t\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t\t},\n\t\n\t\tfull_numbers: function ( page, pages ) {\n\t\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t\t},\n\t\t\n\t\tfirst_last_numbers: function (page, pages) {\n\t \t\treturn ['first', _numbers(page, pages), 'last'];\n\t \t},\n\t\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\t\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t} );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass, counter=0;\n\t\n\t\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\t\tvar i, ien, node, button;\n\t\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t\t};\n\t\n\t\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tbutton = buttons[i];\n\t\n\t\t\t\t\t\tif ( $.isArray( button ) ) {\n\t\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = '';\n\t\n\t\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t\t.appendTo( container );\n\t\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\t\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\n\t\t\t\tattach( $(host).empty(), buttons );\n\t\n\t\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\t\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend( DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t\t},\n\t\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\t\n\t\t// Formatted numbers\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric, formatted\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t] );\n\t\n\t\n\t\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t// \n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\t\n\t\n\t$.extend( DataTable.ext.type.search, {\n\t\thtml: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t\t'';\n\t\t},\n\t\n\t\tstring: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\t\tdata;\n\t\t}\n\t} );\n\t\n\t\n\t\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\t\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\t\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\t\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\t\n\t\treturn d * 1;\n\t};\n\t\n\t\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\tfunction _addNumericSort ( decimalPlace ) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t\t},\n\t\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction ( key, fn ) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\t\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t// Default sort methods\n\t$.extend( _ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function ( d ) {\n\t\t\treturn Date.parse( d ) || -Infinity;\n\t\t},\n\t\n\t\t// html\n\t\t\"html-pre\": function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t},\n\t\n\t\t// string\n\t\t\"string-pre\": function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\t\n\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\n\t\t\"string-desc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t} );\n\t\n\t\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort( '' );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tcolumn.sSortingClass +' '+\n\t\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t},\n\t\n\t\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t\t.append( cell.contents() )\n\t\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( cell );\n\t\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\t\n\tvar __htmlEscapeEntities = function ( d ) {\n\t\treturn typeof d === 'string' ?\n\t\t\td.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\t\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\t\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\t\td = Math.abs( flo );\n\t\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\t\n\t\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\t\n\t\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc (fn)\n\t{\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend( DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t\t                                // in 1.10, so this dead-end function is\n\t\t                                // added to prevent errors\n\t} );\n\t\n\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\n\n\t// Information about events fired by DataTables - for documentation.\n\t/**\n\t * Draw event, fired whenever the table is redrawn on the page, at the same\n\t * point as fnDrawCallback. This may be useful for binding events or\n\t * performing calculations when the table is altered at all.\n\t *  @name DataTable#draw.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Search event, fired when the searching applied to the table (using the\n\t * built-in global search, or column filters) is altered.\n\t *  @name DataTable#search.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page change event, fired when the paging of the table is altered.\n\t *  @name DataTable#page.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Order event, fired when the ordering applied to the table is altered.\n\t *  @name DataTable#order.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * DataTables initialisation complete event, fired when the table is fully\n\t * drawn, including Ajax data loaded, if Ajax data is required.\n\t *  @name DataTable#init.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used</li></ol>\n\t */\n\n\t/**\n\t * State save event, fired when the table has changed state a new state save\n\t * is required. This event allows modification of the state saving object\n\t * prior to actually doing the save, including addition or other state\n\t * properties (for plug-ins) or modification of a DataTables core property.\n\t *  @name DataTable#stateSaveParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The state information to be saved\n\t */\n\n\t/**\n\t * State load event, fired when the table is loading state from the stored\n\t * data, but prior to the settings object being modified by the saved state\n\t * - allowing modification of the saved state is required or loading of\n\t * state for a plug-in.\n\t *  @name DataTable#stateLoadParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * State loaded event, fired when state has been loaded from stored data and\n\t * the settings object has been modified by the loaded data.\n\t *  @name DataTable#stateLoaded.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * Processing event, fired when DataTables is doing some kind of processing\n\t * (be it, order, searcg or anything else). It can be used to indicate to\n\t * the end user that there is something happening, or that something has\n\t * finished.\n\t *  @name DataTable#processing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n\t */\n\n\t/**\n\t * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n\t * request to made to the server for new data. This event is called before\n\t * DataTables processed the returned data, so it can also be used to pre-\n\t * process the data returned from the server, if needed.\n\t *\n\t * Note that this trigger is called in `fnServerData`, if you override\n\t * `fnServerData` and which to use this event, you need to trigger it in you\n\t * success function.\n\t *  @name DataTable#xhr.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {object} json JSON returned from the server\n\t *\n\t *  @example\n\t *     // Use a custom property returned from the server in another DOM element\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       $('#status').html( json.status );\n\t *     } );\n\t *\n\t *  @example\n\t *     // Pre-process the data returned from the server\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n\t *       }\n\t *       // Note no return - manipulate the data directly in the JSON object.\n\t *     } );\n\t */\n\n\t/**\n\t * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n\t * or passing the bDestroy:true parameter in the initialisation object. This\n\t * can be used to remove bound events, added DOM nodes, etc.\n\t *  @name DataTable#destroy.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page length change event, fired when number of records to show on each\n\t * page (the length) is changed.\n\t *  @name DataTable#length.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {integer} len New length\n\t */\n\n\t/**\n\t * Column sizing has changed.\n\t *  @name DataTable#column-sizing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Column visibility has changed.\n\t *  @name DataTable#column-visibility.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {int} column Column index\n\t *  @param {bool} vis `false` if column now hidden, or `true` if visible\n\t */\n\n\treturn $.fn.dataTable;\n}));\n","\n// window._ = require('lodash');\n\n/**\n * We'll load jQuery and the Bootstrap jQuery plugin which provides support\n * for JavaScript based Bootstrap features such as modals and tabs. This\n * code may be modified to fit the specific needs of your application.\n */\n\nwindow.$ = window.jQuery = require('jquery');\n// require('bootstrap-sass');\n\n/**\n * Vue is a modern JavaScript library for building interactive web interfaces\n * using reactive data binding and reusable components. Vue's API is clean\n * and simple, leaving you to focus on building your next great project.\n */\n\n// window.Vue = require('vue');\n// require('vue-resource');\n\n/**\n * We'll register a HTTP interceptor to attach the \"CSRF\" header to each of\n * the outgoing requests issued by this application. The CSRF middleware\n * included with Laravel will automatically verify the header's value.\n */\n\n// Vue.http.interceptors.push((request, next) => {\n//     request.headers.set('X-CSRF-TOKEN', Laravel.csrfToken);\n\n//     next();\n// });\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\nwindow.Dropzone = require('dropzone');\n\n// var $ = require( 'jquery' );\nwindow.dt = require( 'datatables.net' )();\n// import Echo from \"laravel-echo\"\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: 'your-pusher-key'\n// });\n","/**\n * First we will load all of this project's JavaScript dependencies which\n * include Vue and Vue Resource. This gives a great starting point for\n * building robust, powerful web applications using Vue and Laravel.\n */\n\nrequire('./bootstrap');\n\njQuery(function() {\n    var $toggle = $('#nav-toggle');\n    var $menu = $('#nav-menu');\n\n    $toggle.click(function() {\n        $(this).toggleClass('is-active');\n        $menu.toggleClass('is-active');\n    });\n});\n/**\n * Next, we will create a fresh Vue application instance and attach it to\n * the page. Then, you may begin adding components to this application\n * or customize the JavaScript scaffolding to fit your unique needs.\n */\n\n// Vue.component('example', require('./components/Example.vue'));\n\n// const app = new Vue({\n//     el: '#app'\n// });\n"],"names":["this","arguments","require$$0","require$$2","require$$1"],"mappings":"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","preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}